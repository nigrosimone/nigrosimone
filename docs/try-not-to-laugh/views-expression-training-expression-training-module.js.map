{"version":3,"sources":["./src/app/features/home/views/expression-training/expression-training.module.ts","./src/app/features/home/views/expression-training/expression-training-routing.module.ts","./src/app/features/home/views/expression-training/expression-training.component.ts","./src/app/features/home/views/expression-training/expression-training.component.html"],"names":[],"mappings":"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","file":"views-expression-training-expression-training-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExpressionTrainingComponent } from './expression-training.component';\nimport { ExpressionTrainingRoutingModule } from './expression-training-routing.module';\nimport { HumanizeTimeModule } from 'src/app/shared/pipe/humanize-time/humanize-time.module';\nimport { CameraDetectionModule } from 'src/app/shared/components/camera-detection/camera-detection.module';\n\n@NgModule({\n  declarations: [ExpressionTrainingComponent],\n  imports: [\n    CommonModule,\n    ExpressionTrainingRoutingModule,\n    HumanizeTimeModule,\n    CameraDetectionModule\n  ],\n  exports: [\n    ExpressionTrainingComponent\n  ]\n})\nexport class ExpressionTrainingModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ExpressionTrainingComponent } from './expression-training.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExpressionTrainingComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExpressionTrainingRoutingModule { }\n","import { ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport * as faceapi from 'face-api.js';\r\nimport { Subscription } from 'rxjs';\r\nimport { WindowService } from 'src/app/core/services/window/windos.service';\r\nimport { CameraDetectionComponent } from 'src/app/shared/components/camera-detection/camera-detection.component';\r\nimport { beep, randomItemFromArray, safeUnsubscribe } from 'src/app/shared/utils/common';\r\n\r\ninterface Expression {\r\n  expression: keyof Omit<faceapi.FaceExpressions, 'neutral'>;\r\n  label: string;\r\n}\r\n\r\nconst EXPRESSIONS: Array<Expression> = [\r\n  { expression: 'happy', label: 'felice' },\r\n  { expression: 'sad', label: 'triste' },\r\n  { expression: 'angry', label: 'arrabbiata' },\r\n  { expression: 'fearful', label: 'spaventata' },\r\n  { expression: 'disgusted', label: 'disgustata' },\r\n  { expression: 'surprised', label: 'sorpresa' }\r\n];\r\n@Component({\r\n  selector: 'app-expression-training',\r\n  templateUrl: './expression-training.component.html',\r\n  styleUrls: ['./expression-training.component.scss']\r\n})\r\nexport class ExpressionTrainingComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('cameraDetection', { static: false }) cameraDetection: CameraDetectionComponent;\r\n\r\n  // epressione da fare\r\n  public targetExpression: Expression = randomItemFromArray<Expression>(EXPRESSIONS);\r\n  // espressione con la quale ha perso l'utente\r\n  public loseExpression: Expression;\r\n  // se è richiesta l'espressione neutrale\r\n  public neutralRequested = false;\r\n\r\n  // true se l'espressione facciale è stata trovata nella webcam\r\n  public faceDetected = false;\r\n  // se true l'espressione facciale è stata trovata almeno una volta\r\n  public firstDetectionHappen = false;\r\n  // se true il riconoscimento facciale è pronto\r\n  public detectionReady = false;\r\n\r\n  // se true youtube e il riconoscimento facciale sono pronti\r\n  public allReady = false;\r\n\r\n  // partita terminata\r\n  public endMatch = false;\r\n  // partita terminata come persa\r\n  public loseMatch = false;\r\n  // partita terminata come vinta\r\n  public winMatch = false;\r\n\r\n  // true se la partita può iniziare\r\n  public readyToGame = false;\r\n\r\n  // dimensioni dell'area di gioco\r\n  public width = 0;\r\n  public height = 0;\r\n\r\n  // record di espressioni indovinate\r\n  public recordDuration = 0;\r\n  // numero di espressioni indovinate\r\n  public matchDuration = 0;\r\n\r\n  private subVwChanges: Subscription;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private windowService: WindowService,\r\n    private elRef: ElementRef) {\r\n    this.recordDuration = this.getLocalStorageDuration();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subVwChanges = this.windowService.viewPortChanges.subscribe(() => {\r\n      this.doResize();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    safeUnsubscribe(this.subVwChanges);\r\n  }\r\n\r\n  /**\r\n   * Evento di caricamento completato del riconoscimento facciale\r\n   */\r\n  onDetectionReady(e: boolean): void {\r\n    this.detectionReady = true;\r\n    this.doThirdPartyOnReady();\r\n  }\r\n\r\n  /**\r\n   * Evento scatenato al primo riconoscimento facciale\r\n   */\r\n  onFirstDetection(e: boolean): void {\r\n    this.firstDetectionHappen = e;\r\n  }\r\n\r\n  /**\r\n   * Evento ad ogni cambiamento di stato (trovata/non trovata la faccia)\r\n   */\r\n  onDetectionFace(e: boolean): void {\r\n    this.faceDetected = e;\r\n  }\r\n\r\n  /**\r\n   * Quando il player youtube o il riconoscimento sono ready, gestiamo le parti comuni\r\n   */\r\n  doThirdPartyOnReady(): void {\r\n    this.allReady = this.detectionReady;\r\n    this.doResize();\r\n  }\r\n\r\n  /**\r\n   * Evento di cambiamento del riconoscimento facciale\r\n   */\r\n  onDetectionChanges(e: faceapi.FaceExpressions): void {\r\n\r\n    // ridimensioniamo l'area di gioco\r\n    this.doResize();\r\n\r\n    // faccia trovata?\r\n    if (e) {\r\n\r\n      let foundTargetExpression = null;\r\n      let foundNonTargetExpression = null;\r\n      for (const ex of EXPRESSIONS) {\r\n        const value: number = e[ex.expression] as number;\r\n        if (ex.expression === this.targetExpression.expression) {\r\n          if (value > 0.4) {\r\n            foundTargetExpression = ex;\r\n          }\r\n        } else {\r\n          if (value > 0.94) {\r\n            foundNonTargetExpression = ex;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (foundNonTargetExpression) {\r\n        this.loseExpression = foundNonTargetExpression;\r\n        this.endGame(false);\r\n        return;\r\n      }\r\n\r\n      // se l'espressione è maggiore di ... genreriamo una nuova epressione\r\n      if (foundTargetExpression) {\r\n        if (!this.neutralRequested) {\r\n          beep();\r\n          this.matchDuration++;\r\n        }\r\n        // l'utente deve tornare con una espressione neutra\r\n        this.neutralRequested = true;\r\n      } else {\r\n        // se è richiesta una espressione neutrale e l'utente la fa\r\n        if (this.neutralRequested && e.neutral > 0.6) {\r\n          this.targetExpression = randomItemFromArray<Expression>(EXPRESSIONS);\r\n          this.neutralRequested = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.manageReadyToGameState();\r\n  }\r\n\r\n  /**\r\n   * Termina la partita\r\n   */\r\n  endGame(userWin: boolean): void {\r\n    if (!this.endMatch) {\r\n      this.winMatch = userWin;\r\n      this.loseMatch = !this.winMatch;\r\n      this.endMatch = true;\r\n      // mettiamo in pausa il video della webcam\r\n      this.cameraDetection.pauseVideo();\r\n      // facciamo vibrare il cellulare\r\n      window.navigator.vibrate(200);\r\n      this.manageReadyToGameState();\r\n      if (this.matchDuration > this.recordDuration) {\r\n        this.setLocalStorageDuration(this.matchDuration);\r\n      }\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gestisce lo stato della partita (se è pronta per essere giocata o meno)\r\n   */\r\n  manageReadyToGameState(): void {\r\n    // può essere giocata se non è terminata e se abbiamo trovato la faccia\r\n    const readyToGame = !this.endMatch && this.faceDetected;\r\n    if (this.readyToGame !== readyToGame) {\r\n      this.readyToGame = readyToGame;\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  doResize(): void {\r\n    // -1 altrimenti esce la scrollbar\r\n    const w = this.elRef.nativeElement.clientWidth - 1;\r\n    const h = this.elRef.nativeElement.clientHeight - 1;\r\n\r\n    if (w !== this.width || h !== this.height) {\r\n      this.width = w;\r\n      this.height = h;\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recupera dal localstorage il record di espressioni indovinate\r\n   */\r\n  getLocalStorageDuration(): number {\r\n    return +localStorage.getItem(`expression-training-duration`);\r\n  }\r\n\r\n  /**\r\n   * Setta nel localstorage il record di espressioni indovinate\r\n   */\r\n  setLocalStorageDuration(value: number): void {\r\n    localStorage.setItem(`expression-training-duration`, value.toString());\r\n  }\r\n}\r\n","<div class=\"game-container\" [style.width]=\"width + 'px'\" [style.height]=\"height + 'px'\">\r\n    <div class=\"info\">\r\n        <h1 *ngIf=\"endMatch && loseMatch\">Hai perso, dovevi fare una faccia \"{{ targetExpression.label }}\" invece ne hai fatta una \"{{loseExpression.label}}\"!</h1>\r\n        <h1 *ngIf=\"endMatch && winMatch\">Hai vinto!</h1>\r\n        <h1 *ngIf=\"detectionReady && !endMatch && !faceDetected\">Non riesco a vedere la tua faccia!</h1>\r\n        <h1 *ngIf=\"faceDetected && !endMatch && !neutralRequested\">Fai una faccia: {{ targetExpression.label }}</h1>\r\n        <h1 *ngIf=\"faceDetected && !endMatch && neutralRequested\">Bravo! adesso torna con una espressione normale per una nuova sfida</h1>\r\n        <div class=\"badge-container\" *ngIf=\"faceDetected || endMatch\">\r\n            <span class=\"badge badge-duration\" [style.background]=\"matchDuration > recordDuration ? 'green' : 'blue'\">Espressioni: {{ matchDuration }}</span>\r\n            <span class=\"badge badge-record-duration\" *ngIf=\"recordDuration\">Record: {{ recordDuration }}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"webcam\">\r\n        <app-camera-detection [width]=\"width\" [height]=\"height\" [drawDetection]=\"true\" [detectionTimer]=\"100\" (detectionReady)=\"onDetectionReady($event)\" (detectionChanges)=\"onDetectionChanges($event)\" (firstDetection)=\"onFirstDetection($event)\" (detectionFace)=\"onDetectionFace($event)\" #cameraDetection></app-camera-detection>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}