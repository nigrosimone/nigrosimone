{"version":3,"file":"src_app_features_home_views_expression-training_expression-training_module_ts.js","mappings":"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","sources":["./src/app/features/home/views/expression-training/expression-training-routing.module.ts","./src/app/features/home/views/expression-training/expression-training.component.ts","./src/app/features/home/views/expression-training/expression-training.component.html","./src/app/features/home/views/expression-training/expression-training.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ExpressionTrainingComponent } from './expression-training.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExpressionTrainingComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExpressionTrainingRoutingModule { }\n","import { ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport * as faceapi from 'face-api.js';\r\nimport { Subscription } from 'rxjs';\r\nimport { WindowService } from 'src/app/core/services/window/windos.service';\r\nimport { CameraDetectionComponent } from 'src/app/shared/components/camera-detection/camera-detection.component';\r\nimport { beep, randomItemFromArray, safeUnsubscribe } from 'src/app/shared/utils/common';\r\n\r\ninterface Expression {\r\n  expression: keyof Omit<faceapi.FaceExpressions, 'neutral'>;\r\n  label: string;\r\n}\r\n\r\nconst EXPRESSIONS: Array<Expression> = [\r\n  { expression: 'happy', label: 'felice' },\r\n  { expression: 'sad', label: 'triste' },\r\n  { expression: 'angry', label: 'arrabbiata' },\r\n  { expression: 'fearful', label: 'spaventata' },\r\n  { expression: 'disgusted', label: 'disgustata' },\r\n  { expression: 'surprised', label: 'sorpresa' }\r\n];\r\n@Component({\r\n  selector: 'app-expression-training',\r\n  templateUrl: './expression-training.component.html',\r\n  styleUrls: ['./expression-training.component.scss']\r\n})\r\nexport class ExpressionTrainingComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('cameraDetection', { static: false }) cameraDetection: CameraDetectionComponent;\r\n\r\n  // epressione da fare\r\n  public targetExpression: Expression = randomItemFromArray<Expression>(EXPRESSIONS);\r\n  // espressione con la quale ha perso l'utente\r\n  public loseExpression: Expression;\r\n  // se è richiesta l'espressione neutrale\r\n  public neutralRequested = false;\r\n\r\n  // true se l'espressione facciale è stata trovata nella webcam\r\n  public faceDetected = false;\r\n  // se true l'espressione facciale è stata trovata almeno una volta\r\n  public firstDetectionHappen = false;\r\n  // se true il riconoscimento facciale è pronto\r\n  public detectionReady = false;\r\n\r\n  // se true youtube e il riconoscimento facciale sono pronti\r\n  public allReady = false;\r\n\r\n  // partita terminata\r\n  public endMatch = false;\r\n  // partita terminata come persa\r\n  public loseMatch = false;\r\n  // partita terminata come vinta\r\n  public winMatch = false;\r\n\r\n  // true se la partita può iniziare\r\n  public readyToGame = false;\r\n\r\n  // dimensioni dell'area di gioco\r\n  public width = 0;\r\n  public height = 0;\r\n\r\n  // record di espressioni indovinate\r\n  public recordDuration = 0;\r\n  // numero di espressioni indovinate\r\n  public matchDuration = 0;\r\n\r\n  private subVwChanges: Subscription;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private windowService: WindowService,\r\n    private elRef: ElementRef) {\r\n    this.recordDuration = this.getLocalStorageDuration();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subVwChanges = this.windowService.viewPortChanges.subscribe(() => {\r\n      this.doResize();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    safeUnsubscribe(this.subVwChanges);\r\n  }\r\n\r\n  /**\r\n   * Evento di caricamento completato del riconoscimento facciale\r\n   */\r\n  onDetectionReady(e: boolean): void {\r\n    this.detectionReady = true;\r\n    this.doThirdPartyOnReady();\r\n  }\r\n\r\n  /**\r\n   * Evento scatenato al primo riconoscimento facciale\r\n   */\r\n  onFirstDetection(e: boolean): void {\r\n    this.firstDetectionHappen = e;\r\n  }\r\n\r\n  /**\r\n   * Evento ad ogni cambiamento di stato (trovata/non trovata la faccia)\r\n   */\r\n  onDetectionFace(e: boolean): void {\r\n    this.faceDetected = e;\r\n  }\r\n\r\n  /**\r\n   * Quando il player youtube o il riconoscimento sono ready, gestiamo le parti comuni\r\n   */\r\n  doThirdPartyOnReady(): void {\r\n    this.allReady = this.detectionReady;\r\n    this.doResize();\r\n  }\r\n\r\n  /**\r\n   * Evento di cambiamento del riconoscimento facciale\r\n   */\r\n  onDetectionChanges(e: faceapi.FaceExpressions): void {\r\n\r\n    // ridimensioniamo l'area di gioco\r\n    this.doResize();\r\n\r\n    // faccia trovata?\r\n    if (e) {\r\n\r\n      let foundTargetExpression = null;\r\n      let foundNonTargetExpression = null;\r\n      for (const ex of EXPRESSIONS) {\r\n        const value: number = e[ex.expression] as number;\r\n        if (ex.expression === this.targetExpression.expression) {\r\n          if (value > 0.4) {\r\n            foundTargetExpression = ex;\r\n          }\r\n        } else {\r\n          if (value > 0.94) {\r\n            foundNonTargetExpression = ex;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (foundNonTargetExpression) {\r\n        this.loseExpression = foundNonTargetExpression;\r\n        this.endGame(false);\r\n        return;\r\n      }\r\n\r\n      // se l'espressione è maggiore di ... genreriamo una nuova epressione\r\n      if (foundTargetExpression) {\r\n        if (!this.neutralRequested) {\r\n          beep();\r\n          this.matchDuration++;\r\n        }\r\n        // l'utente deve tornare con una espressione neutra\r\n        this.neutralRequested = true;\r\n      } else {\r\n        // se è richiesta una espressione neutrale e l'utente la fa\r\n        if (this.neutralRequested && e.neutral > 0.6) {\r\n          this.targetExpression = randomItemFromArray<Expression>(EXPRESSIONS);\r\n          this.neutralRequested = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.manageReadyToGameState();\r\n  }\r\n\r\n  /**\r\n   * Termina la partita\r\n   */\r\n  endGame(userWin: boolean): void {\r\n    if (!this.endMatch) {\r\n      this.winMatch = userWin;\r\n      this.loseMatch = !this.winMatch;\r\n      this.endMatch = true;\r\n      // mettiamo in pausa il video della webcam\r\n      this.cameraDetection.pauseVideo();\r\n      // facciamo vibrare il cellulare\r\n      window.navigator.vibrate(200);\r\n      this.manageReadyToGameState();\r\n      if (this.matchDuration > this.recordDuration) {\r\n        this.setLocalStorageDuration(this.matchDuration);\r\n      }\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gestisce lo stato della partita (se è pronta per essere giocata o meno)\r\n   */\r\n  manageReadyToGameState(): void {\r\n    // può essere giocata se non è terminata e se abbiamo trovato la faccia\r\n    const readyToGame = !this.endMatch && this.faceDetected;\r\n    if (this.readyToGame !== readyToGame) {\r\n      this.readyToGame = readyToGame;\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  doResize(): void {\r\n    // -1 altrimenti esce la scrollbar\r\n    const w = this.elRef.nativeElement.clientWidth - 1;\r\n    const h = this.elRef.nativeElement.clientHeight - 1;\r\n\r\n    if (w !== this.width || h !== this.height) {\r\n      this.width = w;\r\n      this.height = h;\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recupera dal localstorage il record di espressioni indovinate\r\n   */\r\n  getLocalStorageDuration(): number {\r\n    return +localStorage.getItem(`expression-training-duration`);\r\n  }\r\n\r\n  /**\r\n   * Setta nel localstorage il record di espressioni indovinate\r\n   */\r\n  setLocalStorageDuration(value: number): void {\r\n    localStorage.setItem(`expression-training-duration`, value.toString());\r\n  }\r\n}\r\n","<div class=\"game-container\" [style.width]=\"width + 'px'\" [style.height]=\"height + 'px'\">\r\n    <div class=\"info\">\r\n        <h1 *ngIf=\"endMatch && loseMatch\">Hai perso, dovevi fare una faccia \"{{ targetExpression.label }}\" invece ne hai fatta una \"{{loseExpression.label}}\"!</h1>\r\n        <h1 *ngIf=\"endMatch && winMatch\">Hai vinto!</h1>\r\n        <h1 *ngIf=\"detectionReady && !endMatch && !faceDetected\">Non riesco a vedere la tua faccia!</h1>\r\n        <h1 *ngIf=\"faceDetected && !endMatch && !neutralRequested\">Fai una faccia: {{ targetExpression.label }}</h1>\r\n        <h1 *ngIf=\"faceDetected && !endMatch && neutralRequested\">Bravo! adesso torna con una espressione normale per una nuova sfida</h1>\r\n        <div class=\"badge-container\" *ngIf=\"faceDetected || endMatch\">\r\n            <span class=\"badge badge-duration\" [style.background]=\"matchDuration > recordDuration ? 'green' : 'blue'\">Espressioni: {{ matchDuration }}</span>\r\n            <span class=\"badge badge-record-duration\" *ngIf=\"recordDuration\">Record: {{ recordDuration }}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"webcam\">\r\n        <app-camera-detection [width]=\"width\" [height]=\"height\" [drawDetection]=\"true\" [detectionTimer]=\"100\" (detectionReady)=\"onDetectionReady($event)\" (detectionChanges)=\"onDetectionChanges($event)\" (firstDetection)=\"onFirstDetection($event)\" (detectionFace)=\"onDetectionFace($event)\" #cameraDetection></app-camera-detection>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExpressionTrainingComponent } from './expression-training.component';\nimport { ExpressionTrainingRoutingModule } from './expression-training-routing.module';\nimport { HumanizeTimeModule } from 'src/app/shared/pipe/humanize-time/humanize-time.module';\nimport { CameraDetectionModule } from 'src/app/shared/components/camera-detection/camera-detection.module';\n\n@NgModule({\n  declarations: [ExpressionTrainingComponent],\n  imports: [\n    CommonModule,\n    ExpressionTrainingRoutingModule,\n    HumanizeTimeModule,\n    CameraDetectionModule\n  ],\n  exports: [\n    ExpressionTrainingComponent\n  ]\n})\nexport class ExpressionTrainingModule { }\n"],"names":["RouterModule","ExpressionTrainingComponent","routes","path","component","ExpressionTrainingRoutingModule","forChild","imports","i1","exports","beep","randomItemFromArray","safeUnsubscribe","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r0","targetExpression","label","loseExpression","ɵɵtextInterpolate1","ctx_r3","ctx_r7","recordDuration","ɵɵtemplate","ExpressionTrainingComponent_div_7_span_3_Template","ɵɵstyleProp","ctx_r5","matchDuration","ɵɵproperty","EXPRESSIONS","expression","constructor","cdr","windowService","elRef","neutralRequested","faceDetected","firstDetectionHappen","detectionReady","allReady","endMatch","loseMatch","winMatch","readyToGame","width","height","getLocalStorageDuration","ngOnInit","subVwChanges","viewPortChanges","subscribe","doResize","ngOnDestroy","onDetectionReady","e","doThirdPartyOnReady","onFirstDetection","onDetectionFace","onDetectionChanges","foundTargetExpression","foundNonTargetExpression","ex","value","endGame","neutral","manageReadyToGameState","userWin","cameraDetection","pauseVideo","window","navigator","vibrate","setLocalStorageDuration","markForCheck","w","nativeElement","clientWidth","h","clientHeight","localStorage","getItem","setItem","toString","ɵɵdirectiveInject","ChangeDetectorRef","WindowService","ElementRef","selectors","viewQuery","ExpressionTrainingComponent_Query","rf","ctx","ExpressionTrainingComponent_h1_2_Template","ExpressionTrainingComponent_h1_3_Template","ExpressionTrainingComponent_h1_4_Template","ExpressionTrainingComponent_h1_5_Template","ExpressionTrainingComponent_h1_6_Template","ExpressionTrainingComponent_div_7_Template","ɵɵlistener","ExpressionTrainingComponent_Template_app_camera_detection_detectionReady_9_listener","$event","ExpressionTrainingComponent_Template_app_camera_detection_detectionChanges_9_listener","ExpressionTrainingComponent_Template_app_camera_detection_firstDetection_9_listener","ExpressionTrainingComponent_Template_app_camera_detection_detectionFace_9_listener","CommonModule","HumanizeTimeModule","CameraDetectionModule","ExpressionTrainingModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}